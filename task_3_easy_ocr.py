# -*- coding: utf-8 -*-
"""task 3 Easy OCR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NpDcV3-TYaoMIO7cZXVbTv7Rwjki3-pS
"""

from google.colab import drive
drive.mount('/content/gdrive')

pip install easyocr

import os
import cv2
import easyocr

# Set the path to the input folder containing the image files
input_folder = "/content/gdrive/MyDrive/ASSIGNMENT/input"

# Set the path to the output folder to store the processed images
output_folder = "/content/gdrive/MyDrive/ASSIGNMENT//output1/folder"

# Create the output folder if it doesn't exist
if not os.path.exists(output_folder):
    os.makedirs(output_folder)

# Initialize the OCR reader
reader = easyocr.Reader(["en"])

# Iterate over each file in the input folder
for filename in os.listdir(input_folder):
    # Check if the file is an image
    if filename.endswith(".jpg") or filename.endswith(".png") or filename.endswith(".jpeg"):
        # Read the image using OpenCV
        image_path = os.path.join(input_folder, filename)
        image = cv2.imread(image_path)

        # Convert the image to grayscale for OCR
        gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

        # Perform OCR on the image
        results = reader.readtext(gray)

        # Draw bounding boxes and OCR text on the image
        for detection in results:
            bbox = detection[0]
            text = detection[1]
            
            # Extract the coordinates of the bounding box
            xmin, ymin = map(int, bbox[0])
            xmax, ymax = map(int, bbox[2])

            # Draw a red bounding box on the image
            cv2.rectangle(image, (xmin, ymin), (xmax, ymax), (0, 0, 255), 2)

            # Put the OCR text beside the bounding box in green color
            cv2.putText(image, text, (xmax + 10, ymin + 10), cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 255, 0), 2)

        # Save the processed image with OCR text highlighted
        output_path = os.path.join(output_folder, f"output_{filename}")
        cv2.imwrite(output_path, image)

# Print a message when the processing is finished
print("OCR processing completed.")

